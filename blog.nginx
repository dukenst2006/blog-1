# Change example.com to your domain
# Redirect HTTP to HTTPS
# To setup free SSL fro Lets encrypt see:
# https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04
server {
    listen 80;
    #listen [::]:80;
    server_name example.com www.example.com;
    return 301 https://example.com$request_uri;
}

# Put project into /srv/www or change root path
server {
    listen 443 ssl http2;
    server_name example.com www.example.com;
    root "/srv/www/blog/public";

    index index.html index.htm index.php;

    charset utf-8;

    # Lets encrypt SSL
    include snippets/ssl-example.com.conf;
    include snippets/ssl-params.conf;

    # cache use short expire date but also use etag on in nginx.conf
    location ~* ^.+.(ico|css|js|gif|jpeg|jpg|png|woff|ttf|otf|svg|woff2|eot)$ {
        # set root of public files (without the 'public' dir)
        root "/srv/www/blog/storage/app";
        expires 24d;
        add_header Pragma public;
        add_header Cache-Control "public";
    }


    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    access_log  /var/log/nginx/blog.access.log;
    error_log  /var/log/nginx/blog.error.log;

    sendfile off;

    client_max_body_size 100m;

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
    }

    location ~ /\.ht {
        deny all;
    }

}
